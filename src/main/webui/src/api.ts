/**
 * This file is auto-generated by the openapi zod client script.
 * DO NOT EDIT THIS FILE MANUALLY.
 */

import { apiUrl } from "@/config"
import { makeApi, Zodios } from "@zodios/core"
import { z } from "zod"

// Types

// Schemas
const PolarityScore = z
  .object({
    neg: z.number().describe("Negative sentiment score"),
    neu: z.number().describe("Neutral sentiment score"),
    pos: z.number().describe("Positive sentiment score"),
    compound: z.number().describe("Compound sentiment score"),
  })
  .strict()
export type PolarityScore = z.infer<typeof PolarityScore>

export const schemas = {
  PolarityScore,
}

// Apis
const analysisControllerEndpoints = makeApi([
  {
    method: "get",
    path: "/api/analyze",
    alias: "analyzeText",
    description: `Returns the sentiment polarity score of the given text.`,
    requestFormat: "json",
    parameters: [
      {
        name: "text",
        type: "Query",
        schema: z.string().regex(/\S/),
      },
    ],
    response: PolarityScore,
  },
])
export const analysisControllerApi = new Zodios(
  apiUrl,
  analysisControllerEndpoints
)
